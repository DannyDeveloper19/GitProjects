// Validating form register
function check_extension (file) {
  allows_extensions = new Array('.gif', '.jpg', '.png', '.jpeg', '.bpm')
  error = null
  if (file) {
    extension = (file.substring(file.lastIndexOf('.'))).toLowerCase()
    allow = false
    for (var i = 0; i < allows_extensions.length; i++) {
      if (allows_extensions[i] == extension) {
        allow = true
        break
      }
    }
    if (!allow) {
      error = 'Extension no allowed. these are allowed extensions: ' + allows_extensions.join()
    }else {
      return 1
    }
  }
  if (error != null) {
    alert(error)
    return 0
  }
}

$().ready(function () {
  $.validator.addMethod(
    'regex',
    function (value, element, regexp) {
      var re = new RegExp(regexp)
      return this.optional(element) || re.test(value)
    }
  )
  $.validator.addMethod(
    'phone',
    function (value, element) {
      var re = new RegExp(/^\([0-9]{3}\)[0-9]{3}[-][0-9]{4}$/)
      return this.optional(element) || re.test(value)
    }
  )

  $('#frm_resetPassword').on({
    submit: function (e) {
      e.preventDefault()
      $('#frm_resetPassword').validate({
        rules: {
          rd_reset: {
            required: true
          },
          txt_reset: {
            required: true,
            email: {
              depends: function (element) {
                return $('#resetByEmail').is(':checked')
              }
            },
            phone: {
              depends: function (element) {
                return $('#resetByText').is(':checked')
              }
            }

          }
        },
        messages: {
          rd_reset: {
            required: '<center><td colspan="2"><font color="red">Field required!</font></td></center>'
          },
          txt_reset: {
            required: '<center><td colspan="2"><font color="red">Field required!</font></td></center>',
            email: '<center><td colspan="2"><font color="red">Email incorrect!</font></td></center>',
            phone: '<center><td colspan="2"><font color="red">Phone number incorrect!</font></td></center>'
          }
        }
      })
      if ($('#frm_resetPassword').valid()) {
        $.ajax({
          type: 'POST',
          url: '/PHP_MVC/Account/resetPassword/0',
          data: $('#frm_resetPassword').serialize(),
          success: function (response) {
            if (response == 1) {
              $('#div_resetPassword').animate({ right: '+=200px', opacity: '0', display: 'none' }, 'slow')
              $('#div_changePassword').animate({ right: '33.7%', opacity: '1' }, 'slow')
            }else {
              alert(response)
            }
          }
        })
      }
    }

  })

  // Create login validate
  $('#session-sign-in').on({
    click: function (e) {
      e.preventDefault()
      $('#Session').validate({
        rules: {
          username: {
            required: true
          },
          password: {
            required: true
          }
        },
        messages: {
          username: {
            required: '<center><td colspan="2"><font color="red">Field required!</font></td></center>'
          },
          password: {
            required: '<center><td colspan="2"><font color="red">Field required!</font></td></center>'
          }
        }
      })
      if ($('#Session').valid()) {
        $.ajax({
          type: 'POST',
          url: '/PHP_MVC/Account/login/0',
          data: $('#Session').serialize(),
          success: function (response) {
            if (response == '\r\n1') {
              $('#userlogin').addClass('is-invalid')
              $('#userValidate').attr('class', 'invalid-feedback')
              $('#userValidate').html('Username not matched')
            }
            else if (response == '\r\n0') {
              $('#passlogin').addClass('is-invalid')
              $('#passValidate').attr('class', 'invalid-feedback')
              $('#passValidate').html('Password incorrect')
            }else if (response == '\r\n2') {
              alert('The system is presenting some problems, \nwait some minutes and try again.')
            }else {
              document.location = response
            }
          }
        })
      }
    }
  })

  // Modifing register user
  $('#register_user').submit(function (e) {
    e.preventDefault()
    $(this).validate({
      rules: {
        name: {
          required: true,
          regex: /^[A-Za-z .]+$/
        },
        lastname: {
          required: true,
          regex: /^[A-Za-z .]+$/
        },
        street: {
          required: true,
          regex: /^[A-Za-z0-9-. #]+$/
        },
        county: {
          required: true,
          regex: /^[A-Za-z]+$/
        },
        state: {
          required: true,
          regex: /^[A-Z]{2}$/
        },
        zipcode: {
          required: true,
          number: true,
          minlength: 5,
          maxlength: 5
        },
        email: {
          required: true,
          email: true
        },
        phone: {
          required: true,
          regex: /^\([0-9]{3}\)[0-9]{3}[-][0-9]{4}$/

        },
        username: {
          required: true,
          regex: /^[a-z\d_.]{4,15}$/i
        },
        password: {
          required: true,
          minlength: 8,
          regex: /^(?=^.{8,}$)((?=.*\d)|(?=.*\W+))(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$/
        },
        confirmpassword: {
          required: true,
          equalTo: '#password'
        }
      },
      messages: {
        name: {
          required: '<center><td colspan="2"><font color="red">Field required!</font></td></center>',
          regex: '<center><td colspan="2"><font color="red">Only letters!</font></td></center>'
        },
        lastname: {
          required: '<center><td colspan="2"><font color="red">Field required!</font></td></center>',
          regex: '<center><td colspan="2"><font color="red">Only letters!</font></td></center>'
        },
        street: {
          required: '<center><td colspan="2"><font color="red">Field required!</font></td></center>'
        },
        county: {
          required: '<center><td colspan="2"><font color="red">Field required!</font></td></center>',
          regex: '<center><td colspan="2"><font color="red">Only letters!</font></td></center>'
        },
        state: {
          required: '<center><td colspan="2"><font color="red">Field required!</font></td></center>',
          regex: '<center><td colspan="2"><font color="red">Only letters!</font></td></center>'
        },
        zipcode: {
          required: '<center><td colspan="2"><font color="red">Field required!</font></td></center>',
          number: '<center><td colspan="2"><font color="red">Must be numbers!</font></td></center>',
          minlength: '<center><td colspan="2"><font color="red">No more or less than 5 digits!</font></td></center>',
          maxlength: '<center><td colspan="2"><font color="red">No more or less than 5 digits!</font></td></center>'
        },
        email: {
          required: '<center><td colspan="2"><font color="red">Field required!</font></td></center>',
          email: '<center><td colspan="2"><font color="red">Email format incorrect!</font></td></center>'
        },
        phone: {
          required: '<center><td colspan="2"><font color="red">Field required!</font></td></center>',
          regex: '<center><td colspan="2"><font color="red">Phone format wrong!</font></td></center>'
        },
        username: {
          required: '<center><td colspan="2"><font color="red">Field required!</font></td></center>',
          regex: '<center><td colspan="2"><font color="red">Username not allowed!</font></td></center>'
        },
        password: {
          required: '<center><td colspan="2"><font color="red">Field required!</font></td></center>',
          minlength: '<center><td colspan="2"><font color="red">Password must have at leas 8 characters</font></td></center>',
          regex: '<center><td colspan="2"><font color="red">Passwords must have at least one uppercase letter, one number and specials character.</font></td></center>'
        },
        confirmpassword: {
          required: '<center><td colspan="2"><font color="red">Field required!</font></td></center>',
          equalTo: '<center><td colspan="2"><font color="red">Passwords not matched!</font></td></center>'
        }
      }
    })
    if ($(this).valid()) {
      $.ajax({
        type: 'POST',
        url: '/PHP_MVC/Account/register/0',
        data: $(this).serialize(),
        success: function (response) {
          if (response == '\r\n1') {
            $('#form_credentials').hide()
            $('#form_picture').hide()
            $('#alert_register').show(1000, function () {
              $(this).html('This user exists already!')
              $(this).hide(5000, function () {})
            })
          }
          else if (response == '\r\n2') {
            $('#form_credentials').hide()
            $('#form_picture').hide()
            $('#alert_register').show(1000, function () {
              $(this).html("The system can't response your request right now,\n wait few minutes and try again")
              $(this).hide(5000, function () {})
            })
          }else {
            localStorage.removeItem('url')
            document.location = response
          }
        }
      })
    }
  })
  $('#frm_Verification').submit(function (e) {
    e.preventDefault()
    $(this).validate({
      rules: {
        txt_code: {
          required: true,
          number: true,
          minlength: 5,
          maxlength: 5
        }
      },
      messages: {
        txt_code: {
          required: '<center><td colspan="2"><font color="red">Field required!</font></td></center>',
          number: '<center><td colspan="2"><font color="red">Code incorrect!</font></td></center>',
          minlength: '<center><td colspan="2"><font color="red">No more or less than 5 digits!</font></td></center>',
          maxlength: '<center><td colspan="2"><font color="red">No more or less than 5 digits!</font></td></center>'
        }
      }
    })
    if ($(this).valid()) {
      $.ajax({
        type: 'POST',
        url: '/PHP_MVC/Account/resetPassword/0',
        data: $('#frm_Verification').serialize(),
        success: function (response) {
          if (response !== 0)
            document.location = response
          else
            alert('Code not matched')
        }
      })
    }
  })
  $('#frm_changePassword').submit(function (e) {
    e.preventDefault()
    $(this).validate({
      rules: {
        pss_newPassword: {
          required: true,
          regex: /^(?=^.{8,}$)((?=.*\d)|(?=.*\W+))(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$/,
          minlength: 8
        },
        pss_confirmPassword: {
          required: true,
          equalTo: '#newPassword'
        }
      },
      messages: {
        pss_newPassword: {
          required: '<center><td colspan="2"><font color="red">Field required!</font></td></center>',
          minlength: '<center><td colspan="2"><font color="red">Password must have at leas 8 characters</font></td></center>',
          regex: '<center><td colspan="2"><font color="red">Passwords must have at least one uppercase letter, one number and specials character.</font></td></center>'
        },
        pss_confirmPassword: {
          required: '<center><td colspan="2"><font color="red">Field required!</font></td></center>',
          equalTo: '<center><td colspan="2"><font color="red">Passwords not matched!</font></td></center>'
        }
      }
    })
    if ($(this).valid()) {
      $.ajax({
        type: 'POST',
        url: '/PHP_MVC/Account/changePassword/0',
        data: $(this).serialize(),
        success: function (response) {
          if (response === '\r\n0') {
            alert("You have to write another password")
          }else
            document.location = response
        }
      })
    }
  })
})
